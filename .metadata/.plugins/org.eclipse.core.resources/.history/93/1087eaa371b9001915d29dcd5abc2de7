/*
 * Task_LED.c
 *
 *  Created on: 8/08/2019
 *      Author: sly31
 */
#include "main.h"

xQueueHandle g_pLEDQueue;
extern xSemaphoreHandle g_pUARTSemaphore;

static void LEDTask(void *pvParameters) {
    while(1) {
        if(xQueueReceive(g_pLEDQueue, &i8Message, 0) == pdPASS) {
            if(i8Message == LEFT_BUTTON) {


                xSemaphoreTake(g_pUARTSemaphore, portMAX_DELAY);
                xSemaphoreGive(g_pUARTSemaphore);
            }
        }
    }
}

uint32_t LEDTaskInit(void) {
    SysCtlPeripheralEnable(RED_GPIO_PERIPH);
    SysCtlPeripheralEnable(GREEN_GPIO_PERIPH);
    SysCtlPeripheralEnable(BLUE_GPIO_PERIPH);

    g_pLEDQueue = xQueueCreate(LED_QUEUE_SIZE, LED_ITEM_SIZE);     // Create a queue for sending messages to the LED task.
    if(xTaskCreate(LEDTask, (const portCHAR *)"LED", LEDTASKSTACKSIZE, NULL,
                   tskIDLE_PRIORITY + PRIORITY_LED_TASK, NULL) != pdTRUE) {return(1);}
    return(0);

}
